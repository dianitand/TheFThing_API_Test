{
  "stats": {
    "suites": 2,
    "tests": 10,
    "passes": 7,
    "pending": 0,
    "failures": 3,
    "start": "2020-04-08T03:42:41.526Z",
    "end": "2020-04-08T03:42:50.700Z",
    "duration": 9174,
    "testsRegistered": 10,
    "passPercent": 70,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "warning",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "0ecd3e5e-5e26-47fb-9baa-72db87e33f07",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "3e3e0fc1-b00e-4cc8-b459-26fd90939b45",
        "title": "Add to Cart Testing",
        "fullFile": "D:\\automated_test\\API_TEST\\TestOrder.js",
        "file": "\\API_TEST\\TestOrder.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Login",
            "fullTitle": "Add to Cart Testing Login",
            "timedOut": false,
            "duration": 459,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "sendApi(mailWish, passWish)\nchai.request(serverApi)\n    .post('/customer/login.php')\n    .send(hit)\n    .end((err, res) => {\n        should.not.exist(err);\n        res.should.have.status(200);\n        res.type.should.equal('application/json');\n        res.body.should.be.a('object');\n        res.should.be.json;\n        res.body.result.response.should.eql('success');\n        res.body.should.include.keys(\n            'token'\n        );\n        token = res.body.token\n        done();\n    })",
            "err": {},
            "isRoot": false,
            "uuid": "67018946-e79d-4977-a47c-86788e4c87e0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check My Cart: Count item in Cart",
            "fullTitle": "Add to Cart Testing Check My Cart: Count item in Cart",
            "timedOut": false,
            "duration": 878,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(serverApi)\n    .post('/getCart.php?')\n    .set({\n        \"Authorization\": token\n    })\n    .end((err, res) => {\n        should.not.exist(err);\n        res.should.have.status(200);\n        res.type.should.equal('application/json');\n        res.body.should.be.a('object');\n        res.should.be.json;\n        existItem = res.body.result.count_item\n        let cobaaa = res.body.result.item[0].item_id\n        console.log(cobaaa)\n        done();\n    })",
            "err": {},
            "isRoot": false,
            "uuid": "0a1e5e9a-6bec-4c44-9eec-19d2e8cda45e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Add To Cart: Empty Size in Configurable product",
            "fullTitle": "Add to Cart Testing Add To Cart: Empty Size in Configurable product",
            "timedOut": false,
            "duration": 719,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(serverApi)\n    .post('/checkout/cart/add_cart_v3.php?device=ios')\n    .set({\n        \"Authorization\": token\n    })\n    .send({\n        \"body\": {\n            \"product_id\": itemConfig[0][0],\n            \"qty\": 1,\n            \"size\": \"\"\n        }\n    })\n    .end((err, res) => {\n        should.not.exist(err);\n        res.should.have.status(200);\n        res.type.should.equal('application/json');\n        res.body.should.be.a('object');\n        res.should.be.json;\n        res.body.should.include({\n            \"status_code\": 202,\n            \"response\": \"error\",\n            \"message\": \"Id \" + itemConfig[0][0] + \" is configurable product. Please fill it's attribute such as size or color.\"\n        })\n        done();\n    })",
            "err": {},
            "isRoot": false,
            "uuid": "6b14f606-2c63-4f61-9e94-146ec30f3099",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Add To Cart: Empty Parameter",
            "fullTitle": "Add to Cart Testing Add To Cart: Empty Parameter",
            "timedOut": false,
            "duration": 716,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(serverApi)\n    .post('/checkout/cart/add_cart_v3.php?device=ios')\n    .set({\n        \"Authorization\": token\n    })\n    .send({\n        \"body\": {\n            \"product_id\": \"\",\n            \"qty\": 1\n        }\n    })\n    .end((err, res) => {\n        should.not.exist(err);\n        res.should.have.status(200);\n        res.type.should.equal('application/json');\n        res.body.should.be.a('object');\n        res.should.be.json;\n        res.body.should.include({\n            \"status_code\": 202,\n            \"response\": \"error\",\n            \"message\": \"Param data is empty. Please fill product id, qty and size if exist.\"\n        })\n        done();\n    })",
            "err": {},
            "isRoot": false,
            "uuid": "f9e6d7e7-90fb-485b-8a4e-0e147a0e6c55",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Add To Cart: Exceeds the existing stock 25679",
            "fullTitle": "Add to Cart Testing Add To Cart: Exceeds the existing stock 25679",
            "timedOut": false,
            "duration": 725,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(serverApi)\n    .post('/checkout/cart/add_cart_v3.php?device=ios')\n    .set({\n        \"Authorization\": token\n    })\n    .send({\n        \"body\": {\n            \"product_id\": itemSimple[0],\n            \"qty\": 100\n        }\n    })\n    .end((err, res) => {\n        should.not.exist(err);\n        res.should.have.status(200);\n        res.type.should.equal('application/json');\n        res.body.should.be.a('object');\n        res.should.be.json;\n        res.body.should.include({\n            \"status_code\": 202,\n            \"response\": \"error\",\n        })\n        done();\n    })",
            "err": {},
            "isRoot": false,
            "uuid": "3ce39a80-896d-416f-be7d-7016f233007e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Add To Cart: Simple Product: 25679",
            "fullTitle": "Add to Cart Testing Add To Cart: Simple Product: 25679",
            "timedOut": false,
            "duration": 903,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(serverApi)\n    .post('/checkout/cart/add_cart_v3.php?device=ios')\n    .set({\n        \"Authorization\": token\n    })\n    .send({\n        \"body\": {\n            \"product_id\": j,\n            \"qty\": 1\n        }\n    })\n    .end((err, res) => {\n        should.not.exist(err);\n        res.should.have.status(200);\n        res.type.should.equal('application/json');\n        res.body.should.be.a('object');\n        res.should.be.json;\n        res.body.should.include({\n            \"status_code\": 200,\n            \"response\": \"success\",\n            \"message\": \"Item added to cart\"\n        })\n        done();\n    })",
            "err": {},
            "isRoot": false,
            "uuid": "08eb52a4-f180-448f-8457-a9af397606c6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Add To Cart: Simple Product: 25687",
            "fullTitle": "Add to Cart Testing Add To Cart: Simple Product: 25687",
            "timedOut": false,
            "duration": 1327,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(serverApi)\n    .post('/checkout/cart/add_cart_v3.php?device=ios')\n    .set({\n        \"Authorization\": token\n    })\n    .send({\n        \"body\": {\n            \"product_id\": j,\n            \"qty\": 1\n        }\n    })\n    .end((err, res) => {\n        should.not.exist(err);\n        res.should.have.status(200);\n        res.type.should.equal('application/json');\n        res.body.should.be.a('object');\n        res.should.be.json;\n        res.body.should.include({\n            \"status_code\": 200,\n            \"response\": \"success\",\n            \"message\": \"Item added to cart\"\n        })\n        done();\n    })",
            "err": {},
            "isRoot": false,
            "uuid": "be86a080-2bca-4c5d-92ff-5c96c6fdd5c2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Add to Cart Positive : Add Config Product [27903,36]",
            "fullTitle": "Add to Cart Testing Add to Cart Positive : Add Config Product [27903,36]",
            "timedOut": false,
            "duration": 0,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "chai.request(serverApi)\n    .post('/checkout/cart/add_cart_v3.php?device=ios')\n    .set({\n        \"Authorization\": token\n    })\n    .send({\n        \"body\": {\n            \"product_id\": i[0],\n            \"qty\": 1,\n            \"size\": i[1]\n        }\n    })\n    .end((err, res) => {\n        should.not.exist(err);\n        res.should.have.status(200);\n        res.type.should.equal('application/json');\n        res.body.should.be.a('object');\n        res.should.be.json;\n        res.body.should.include({\n            \"status_code\": 200,\n            \"response\": \"success\",\n            \"message\": \"Item added to cart\"\n        })\n        quoteId = res.body.cart.cart_id\n        done();\n    })",
            "err": {
              "message": "AssertionError: expected { Object (status_code, response, ...) } to have property 'status_code' of 200, but got 202",
              "estack": "AssertionError: expected { Object (status_code, response, ...) } to have property 'status_code' of 200, but got 202\n    at D:\\automated_test\\API_TEST\\SearchPorductATC.test.js:199:37\n    at Test.Request.callback (node_modules\\superagent\\lib\\node\\index.js:716:12)\n    at D:\\automated_test\\node_modules\\superagent\\lib\\node\\index.js:916:18\n    at IncomingMessage.<anonymous> (node_modules\\superagent\\lib\\node\\parsers\\json.js:19:7)\n    at endReadableNT (_stream_readable.js:1201:12)\n    at processTicksAndRejections (internal/process/task_queues.js:84:21)",
              "diff": "- 202\n+ 200\n"
            },
            "isRoot": false,
            "uuid": "f5402c6e-cc6d-4dc8-87b5-fc958951f11c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Add to Cart Positive : Add Config Product [17987,M]",
            "fullTitle": "Add to Cart Testing Add to Cart Positive : Add Config Product [17987,M]",
            "timedOut": false,
            "duration": 0,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "chai.request(serverApi)\n    .post('/checkout/cart/add_cart_v3.php?device=ios')\n    .set({\n        \"Authorization\": token\n    })\n    .send({\n        \"body\": {\n            \"product_id\": i[0],\n            \"qty\": 1,\n            \"size\": i[1]\n        }\n    })\n    .end((err, res) => {\n        should.not.exist(err);\n        res.should.have.status(200);\n        res.type.should.equal('application/json');\n        res.body.should.be.a('object');\n        res.should.be.json;\n        res.body.should.include({\n            \"status_code\": 200,\n            \"response\": \"success\",\n            \"message\": \"Item added to cart\"\n        })\n        quoteId = res.body.cart.cart_id\n        done();\n    })",
            "err": {
              "message": "AssertionError: expected { Object (status_code, response, ...) } to have property 'status_code' of 200, but got 202",
              "estack": "AssertionError: expected { Object (status_code, response, ...) } to have property 'status_code' of 200, but got 202\n    at D:\\automated_test\\API_TEST\\SearchPorductATC.test.js:199:37\n    at Test.Request.callback (node_modules\\superagent\\lib\\node\\index.js:716:12)\n    at D:\\automated_test\\node_modules\\superagent\\lib\\node\\index.js:916:18\n    at IncomingMessage.<anonymous> (node_modules\\superagent\\lib\\node\\parsers\\json.js:19:7)\n    at endReadableNT (_stream_readable.js:1201:12)\n    at processTicksAndRejections (internal/process/task_queues.js:84:21)",
              "diff": "- 202\n+ 200\n"
            },
            "isRoot": false,
            "uuid": "a83e80df-91b8-4d07-9e4f-2eece7050741",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "67018946-e79d-4977-a47c-86788e4c87e0",
          "0a1e5e9a-6bec-4c44-9eec-19d2e8cda45e",
          "6b14f606-2c63-4f61-9e94-146ec30f3099",
          "f9e6d7e7-90fb-485b-8a4e-0e147a0e6c55",
          "3ce39a80-896d-416f-be7d-7016f233007e",
          "08eb52a4-f180-448f-8457-a9af397606c6",
          "be86a080-2bca-4c5d-92ff-5c96c6fdd5c2"
        ],
        "failures": [
          "f5402c6e-cc6d-4dc8-87b5-fc958951f11c",
          "a83e80df-91b8-4d07-9e4f-2eece7050741"
        ],
        "pending": [],
        "skipped": [],
        "duration": null,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "375874cb-c6bb-4dde-b43c-ac81e9ca8e9c",
        "title": "My Cart",
        "fullFile": "D:\\automated_test\\API_TEST\\TestOrder.js",
        "file": "\\API_TEST\\TestOrder.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "My Cart: Count item in Cart",
            "fullTitle": "My Cart My Cart: Count item in Cart",
            "timedOut": false,
            "duration": 0,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "chai.request(serverApi)\n    .post('/getCart.php?')\n    .set({\n        \"Authorization\": token\n    })\n    .end((err, res) => {\n        should.not.exist(err);\n        res.should.have.status(200);\n        res.type.should.equal('application/json');\n        res.body.should.be.a('object');\n        res.should.be.json;\n        res.body.result.should.include({\n            \"count_item\": existItem+4\n        })\n        done();\n    })",
            "err": {
              "message": "AssertionError: expected { Object (quote_id, count_item, ...) } to have property 'count_item' of 33, but got 31",
              "estack": "AssertionError: expected { Object (quote_id, count_item, ...) } to have property 'count_item' of 33, but got 31\n    at D:\\automated_test\\API_TEST\\SearchPorductATC.test.js:224:40\n    at Test.Request.callback (node_modules\\superagent\\lib\\node\\index.js:716:12)\n    at D:\\automated_test\\node_modules\\superagent\\lib\\node\\index.js:916:18\n    at IncomingMessage.<anonymous> (node_modules\\superagent\\lib\\node\\parsers\\json.js:19:7)\n    at endReadableNT (_stream_readable.js:1201:12)\n    at processTicksAndRejections (internal/process/task_queues.js:84:21)",
              "diff": "- 31\n+ 33\n"
            },
            "isRoot": false,
            "uuid": "7beb0d09-f86e-404e-88b2-6094dfe21592",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [],
        "failures": [
          "7beb0d09-f86e-404e-88b2-6094dfe21592"
        ],
        "pending": [],
        "skipped": [],
        "duration": null,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 10000
  },
  "copyrightYear": 2020
}